
install apache2
-version 2.4.38
install mariadb-server
-version 10.3.25
install git
install php-bcmath
install libapache2-mod-php
install php-curl
install php-xml
install php-gd
install php-mbstring
install php-intl
install php-soap
install php-zip
install php-mysql


#Edit /etc/php/7.3/apache2/php.ini
	;date.timezone =
	date.timezone = Europe/Paris
	memory_limit = 128M
	memory_limit=4G
	;opcache.save_comments=1
	opcache.save_comments=1 


command a2enmod ssl
command a2ensite default-ssl
command mkdir /etc/apache2/ssl
command openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt
command chmod 600 /etc/apache2/ssl/*

#edit /etc/apache2/sites-enabled/default-ssl.conf
	                    /etc/ssl/certs/ssl-cert-snakeoil.pem 
	SSLCertificateFile /etc/apache2/ssl/apache.crt
                               /etc/ssl/private/ssl-cert-snakeoil.key
	SSLCertificateKeyFile /etc/apache2/ssl/apache.key
	</IfModule>

	<Directory /var/www/html>
		AllowOverride All
	</Directory>

command a2enmod rewrite
command a2enmod expires
command a2enmod headers
command a2enmod proxy
command a2enmod proxy_html
install openjdk-11-jdk #version a controler


#pas utile
command mysql_secure_installation

mysql create user magento
	create database magento
	grant all on magento to magento

edit /etc/mysql/mariadb.conf.d/50-server.cnf
	[server]
	[server]
	explicit_defaults_for_timestamp=1

#installation elasticsearch

wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.10.0-amd64.deb
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.10.0-amd64.deb.sha512
shasum -a 512 -c elasticsearch-7.10.0-amd64.deb.sha512
#result ok
sudo dpkg -i elasticsearch-7.10.0-amd64.deb

#start service
sudo systemctl start elasticsearch

#activate elasticsearch as service

sudo /bin/systemctl daemon-reload
sudo /bin/systemctl enable elasticsearch.service

#configure elasticsearch proxy for apache2

edit /etc/apache2/sites-available/000-default.conf
	<VirtualHost *:80>

listen 8080\n<VirtualHost *:8080>\n\tProxyPass "/" "http://localhost:9200"\n\tProxyPassReverse "/" "http://localhost:9200"\n


Service restart apache

#check if ok with :   curl -i http://localhost:8080/_cluster/health


#via composer
#install composer
#composer create-project...
#	prévoir un json pour les identifiants de connexion.

#download magento .json authentification a gérer, ou passage par access token ?
#direct download via autentification 
#	curl -k https://MAG005728660:f0e2caa47bd7c7c2e511e689ea6733a3e8a24c98@www.magentocommerce.com/products/downloads/file/Magento-CE-2.4.0.tar.gz --output magento2.4.tar.gz

#command tar -xvzf mangento.tar -C /var/www/html/magento
	#passer /bin/mangento en executable sinon	pas d'exe dans /magento/bin




Probleme a résoudre, acquisition du logiciel, clone git ?

cd /var/www/html/
git clone https://github.com/magento/magento2.git
checkout -tag
#verifier la version ou branche téléchargée pour être sur la latest


install composer
cd /var/www/html/magento2
command sudo composer install

#permission sur le dossier www/html

chown

#commande d'installation et options d'installation
	--language fr_FR
	--currency EUR
	--timezone Europe/Paris
	--use-secure=1
	--base-url-secure=https://xxxxx
	--db-host=xxxx
	--db-name
	--db-user
	--db-password
	--use-secure-admin
	--admin-firstname
	--admin-lastname
	--admin-password
	--admin-email
	--base-url

command ./magento cron:install
